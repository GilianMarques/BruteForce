// Generated by view binder compiler. Do not edit!
package com.example.bruteforce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bruteforce.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final View divider0;

  @NonNull
  public final View divider1;

  @NonNull
  public final ExtendedFloatingActionButton fabAction;

  @NonNull
  public final SwitchMaterial swAzLowercase;

  @NonNull
  public final SwitchMaterial swAzUppercase;

  @NonNull
  public final SwitchMaterial swNum;

  @NonNull
  public final SwitchMaterial swSpecialChars;

  @NonNull
  public final TextInputLayout tilInitChar;

  @NonNull
  public final TextInputLayout tilPassword;

  @NonNull
  public final TextInputLayout tilPauseBetweenIterations;

  @NonNull
  public final TextView tvAttempts;

  @NonNull
  public final TextView tvElapsedTime;

  @NonNull
  public final TextView tvEstimation;

  @NonNull
  public final TextView tvHint;

  @NonNull
  public final TextView tvLength;

  @NonNull
  public final TextView tvPassword;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appbar,
      @NonNull View divider0, @NonNull View divider1,
      @NonNull ExtendedFloatingActionButton fabAction, @NonNull SwitchMaterial swAzLowercase,
      @NonNull SwitchMaterial swAzUppercase, @NonNull SwitchMaterial swNum,
      @NonNull SwitchMaterial swSpecialChars, @NonNull TextInputLayout tilInitChar,
      @NonNull TextInputLayout tilPassword, @NonNull TextInputLayout tilPauseBetweenIterations,
      @NonNull TextView tvAttempts, @NonNull TextView tvElapsedTime, @NonNull TextView tvEstimation,
      @NonNull TextView tvHint, @NonNull TextView tvLength, @NonNull TextView tvPassword) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.divider0 = divider0;
    this.divider1 = divider1;
    this.fabAction = fabAction;
    this.swAzLowercase = swAzLowercase;
    this.swAzUppercase = swAzUppercase;
    this.swNum = swNum;
    this.swSpecialChars = swSpecialChars;
    this.tilInitChar = tilInitChar;
    this.tilPassword = tilPassword;
    this.tilPauseBetweenIterations = tilPauseBetweenIterations;
    this.tvAttempts = tvAttempts;
    this.tvElapsedTime = tvElapsedTime;
    this.tvEstimation = tvEstimation;
    this.tvHint = tvHint;
    this.tvLength = tvLength;
    this.tvPassword = tvPassword;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      AppBarLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.divider0;
      View divider0 = ViewBindings.findChildViewById(rootView, id);
      if (divider0 == null) {
        break missingId;
      }

      id = R.id.divider1;
      View divider1 = ViewBindings.findChildViewById(rootView, id);
      if (divider1 == null) {
        break missingId;
      }

      id = R.id.fab_action;
      ExtendedFloatingActionButton fabAction = ViewBindings.findChildViewById(rootView, id);
      if (fabAction == null) {
        break missingId;
      }

      id = R.id.sw_az_lowercase;
      SwitchMaterial swAzLowercase = ViewBindings.findChildViewById(rootView, id);
      if (swAzLowercase == null) {
        break missingId;
      }

      id = R.id.sw_az_uppercase;
      SwitchMaterial swAzUppercase = ViewBindings.findChildViewById(rootView, id);
      if (swAzUppercase == null) {
        break missingId;
      }

      id = R.id.sw_num;
      SwitchMaterial swNum = ViewBindings.findChildViewById(rootView, id);
      if (swNum == null) {
        break missingId;
      }

      id = R.id.sw_special_chars;
      SwitchMaterial swSpecialChars = ViewBindings.findChildViewById(rootView, id);
      if (swSpecialChars == null) {
        break missingId;
      }

      id = R.id.til_init_char;
      TextInputLayout tilInitChar = ViewBindings.findChildViewById(rootView, id);
      if (tilInitChar == null) {
        break missingId;
      }

      id = R.id.til_password;
      TextInputLayout tilPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilPassword == null) {
        break missingId;
      }

      id = R.id.til_pause_between_iterations;
      TextInputLayout tilPauseBetweenIterations = ViewBindings.findChildViewById(rootView, id);
      if (tilPauseBetweenIterations == null) {
        break missingId;
      }

      id = R.id.tv_attempts;
      TextView tvAttempts = ViewBindings.findChildViewById(rootView, id);
      if (tvAttempts == null) {
        break missingId;
      }

      id = R.id.tv_elapsed_time;
      TextView tvElapsedTime = ViewBindings.findChildViewById(rootView, id);
      if (tvElapsedTime == null) {
        break missingId;
      }

      id = R.id.tv_estimation;
      TextView tvEstimation = ViewBindings.findChildViewById(rootView, id);
      if (tvEstimation == null) {
        break missingId;
      }

      id = R.id.tv_hint;
      TextView tvHint = ViewBindings.findChildViewById(rootView, id);
      if (tvHint == null) {
        break missingId;
      }

      id = R.id.tv_length;
      TextView tvLength = ViewBindings.findChildViewById(rootView, id);
      if (tvLength == null) {
        break missingId;
      }

      id = R.id.tv_password;
      TextView tvPassword = ViewBindings.findChildViewById(rootView, id);
      if (tvPassword == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, appbar, divider0, divider1,
          fabAction, swAzLowercase, swAzUppercase, swNum, swSpecialChars, tilInitChar, tilPassword,
          tilPauseBetweenIterations, tvAttempts, tvElapsedTime, tvEstimation, tvHint, tvLength,
          tvPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
